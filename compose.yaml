services:
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: php
    volumes:
      - ./web:/var/www/html
    working_dir: /var/www/html
    networks:
      - internal
    depends_on:
      - mysql

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    container_name: nginx
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./web:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - internal
    depends_on:
      - php

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    restart: always
    env_file:
      - ".env"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "8989:3306"
    volumes:
      - "./data/db/mysql:/var/lib/mysql"
    networks:
      - internal

  composer:
    image: composer:2
    container_name: composer
    working_dir: /var/www/html
    volumes:
      - ./web:/var/www/html
    entrypoint: [ "composer" ]

networks:
  internal:
    driver: bridge